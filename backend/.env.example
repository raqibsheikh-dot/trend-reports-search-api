# ========================================
# API Configuration
# ========================================
# CRITICAL: Generate a secure API key with at least 32 characters
# NEVER commit actual API keys to version control
#
# Generate using one of these methods:
#   openssl rand -hex 32
#   python -c "import secrets; print(secrets.token_hex(32))"
#
# Example format (DO NOT USE THIS EXACT KEY):
# API_KEY=abcd1234567890abcd1234567890abcd1234567890abcd1234567890abcd1234

API_KEY=your_secure_api_key_here_replace_with_actual_64_character_hex_string

# Optional: Deprecated API keys for rotation (comma-separated)
# These keys still work but clients should migrate to primary key
# DEPRECATED_API_KEYS=old_key_1,old_key_2

# ========================================
# Database Configuration
# ========================================
CHROMA_DB_PATH=./chroma_data

# ========================================
# PDF Processing Configuration
# ========================================
REPORTS_FOLDER=../2025 Trend Reports
CHUNK_SIZE=800
OVERLAP=150

# ========================================
# Security & Performance Configuration
# ========================================
# Environment: development or production
# (production enables HSTS and other security headers)
ENVIRONMENT=development

# Rate limiting: Number of requests per time period
# Format: "number/period" where period can be: second, minute, hour, day
# Examples: "10/minute", "100/hour", "1000/day"
RATE_LIMIT=10/minute

# CORS allowed origins (comma-separated list)
# For development, include your frontend dev server (Vite default: http://localhost:5173)
# For production, replace with your actual domain
ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000,https://chat.openai.com,https://chatgpt.com

# ========================================
# Server Configuration (Optional)
# ========================================
# HOST=0.0.0.0
# PORT=8000

# ========================================
# LLM Integration (for advanced features)
# ========================================
# Anthropic Claude API
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# OpenAI GPT API (alternative to Claude)
OPENAI_API_KEY=your_openai_api_key_here

# Preferred LLM provider: anthropic or openai
LLM_PROVIDER=anthropic

# Model selection
ANTHROPIC_MODEL=claude-3-5-sonnet-20241022
OPENAI_MODEL=gpt-4-turbo-preview

# LLM request timeout (seconds)
LLM_TIMEOUT=30

# Monthly budget limit for LLM costs (USD)
LLM_BUDGET_LIMIT=50.00

# ========================================
# Caching Configuration (Optional)
# ========================================
# Redis connection URL
# Local development: redis://localhost:6379
# Render.com: redis://red-xxxxx:6379
REDIS_URL=redis://localhost:6379

# Cache TTL in seconds (3600 = 1 hour)
CACHE_TTL=3600

# Enable/disable caching (true/false)
ENABLE_CACHE=true

# Use in-memory LRU cache instead of Redis (true/false)
# Set to true if Redis is not available
USE_LRU_CACHE=false

# LRU cache size (number of entries)
LRU_CACHE_SIZE=256

# ========================================
# Backup Configuration (Optional)
# ========================================
# S3 bucket for ChromaDB backups
S3_BACKUP_BUCKET=trend-reports-backups

# AWS credentials
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1

# Backup retention (days)
BACKUP_RETENTION_DAYS=7

# Enable automatic backups (true/false)
ENABLE_AUTO_BACKUP=false

# ========================================
# Monitoring & Observability (Optional)
# ========================================
# Sentry DSN for error tracking
SENTRY_DSN=your_sentry_dsn_here

# Sentry environment name
SENTRY_ENVIRONMENT=development

# Enable Prometheus metrics (true/false)
ENABLE_METRICS=true

# Enable detailed request logging (true/false)
ENABLE_REQUEST_LOGGING=true

# ========================================
# Advanced Search Features
# ========================================
# Enable trend categorization (true/false)
ENABLE_CATEGORIZATION=true

# Enable cross-report synthesis (true/false)
ENABLE_SYNTHESIS=true

# Enable query expansion with LLM (true/false)
ENABLE_QUERY_EXPANSION=false

# Enable result reranking with cross-encoder (true/false)
ENABLE_RERANKING=false

# ========================================
# Performance Tuning
# ========================================
# Request timeout (seconds)
REQUEST_TIMEOUT=30

# Maximum concurrent requests per API key
MAX_CONCURRENT_REQUESTS=5

# Embedding batch size for processing
EMBEDDING_BATCH_SIZE=100

# Number of search results to fetch before reranking
# (only used if ENABLE_RERANKING=true)
RERANK_CANDIDATE_MULTIPLIER=2

# ========================================
# Logging Configuration
# ========================================
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log format: json or text
LOG_FORMAT=text
